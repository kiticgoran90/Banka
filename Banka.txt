Написати на језику Java следећи пакет типова (грешке пријављивати изузецима опремљеним текстовима порука):
--Датум има годину, месец и дан који могу да се дохвате. Може да се одреди да ли је један датум новији од другог.
  Текстуални опис је дан/месец/година.
--Рачун има јединствени аутоматски генерисани број, тренутно стање и дозвољени минус, који могу да се дохвате. 
  Могуће је променити стање рачуна за задати износ. Грешка је ако се прекорачи дозвољени минус.
--Захтев за трансфер има јединствени аутоматски генерисан број, рачуне примаоца и уплатиоца, целобројан износ и датум подношења захтева.
  Није потребно проверавати исправност унетих података. Износ и датум подношења могу да се дохвате и промене. 
  Mоже да се дохвати ознака врсте захтева (ниска), да се захтев изврши и да му се направи копија. 
  Приликом прављења копије захтева не копирају се рачуни. Може да се увећа стање рачуна примаоца за износ захтева и да се умањи стање уплатиоца за износ захтева. 
  Извршавање захтева реализује се увећањем стања примаоца и умањењем стања уплатиоца. 
  Резултат извршавања захтева представља индикатор успеха трансфера. Текстуални опис је облика врста(ид)датум.
--Уплатница је захтев за трансфер. Приликом извршавања уплатнице, уплатиоцу се наплаћује провизија у износу од 1% уплате. 
  Ознака врсте је Uplata. Текстуални опис уплатнице је врста(ид)датум[износ:провизија].
--Кредитни захтев је захтев за трансфер. Ознака врсте је Kredit. Приликом извршавања кредитног захтева, примаоцу се наплаћује провизија у износу од 5% кредита. 
  Текстуални опис исплате је врста(ид)датум[износ].
--Банка има рачун и збирку захтева за трансфер, уређену по неопадајућем поретку датума подношења, која је подразумевано празна. 
  Збирка је неограниченог капацитета и могу јој се додавати захтеви за трансфер појединачно, један по један. 
  Захтеви могу да се узимају појединачно са почетка збирке (уклањају се из збирке; грешка је ако је збирка празна). 
  Банка може да узме први захтев из збирке и да га изврши. Текстуални опис банке је у формату стање_ рачуна(захтев,<нова линија>захтев,<нова линија> ..., <нова линија>захтев). 
--Написати на језику Java програм који направи рачун клијента и банке, затим направи банку и дода једну уплатницу, 
  један кредитни захтев, и једну копију уплатнице са новијим датумом. Банка се након тога исписује на стандардни излаз. 
  Затим банка изврши све захтеве за трансфер и опет се исписује на стандардни излаз. 
  Користити константне параметре (не треба ништа учитавати).